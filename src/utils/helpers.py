"""
Helper functions for the application
"""
import os
import json
from PyQt5.QtGui import QPalette, QColor, QPixmap
from PyQt5.QtCore import Qt, QMetaObject, Q_ARG, QObject
import threading
import requests # Added import
from .image_cache import ImageCache

def load_json_file(file_path, default=None):
    """Load JSON data from a file"""
    if default is None:
        default = {}
    
    if not os.path.exists(file_path):
        return default
    
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            return json.load(f)
    except Exception:
        return default

def save_json_file(file_path, data):
    """Save JSON data to a file"""
    try:
        directory = os.path.dirname(file_path)
        if not os.path.exists(directory):
            os.makedirs(directory)
            
        with open(file_path, 'w', encoding='utf-8') as f:
            json.dump(data, f, ensure_ascii=False, indent=2)
        return True
    except Exception:
        return False

def format_duration(seconds):
    """Format seconds to HH:MM:SS"""
    if seconds is None:
        return "00:00:00"
    
    hours = seconds // 3600
    minutes = (seconds % 3600) // 60
    seconds = seconds % 60
    
    if hours > 0:
        return f"{hours:02d}:{minutes:02d}:{seconds:02d}"
    else:
        return f"{minutes:02d}:{seconds:02d}"

def apply_dark_theme(app):
    """Apply dark theme to the application"""
    dark_palette = QPalette()
    dark_palette.setColor(QPalette.Window, QColor(53, 53, 53))
    dark_palette.setColor(QPalette.WindowText, Qt.white)
    dark_palette.setColor(QPalette.Base, QColor(25, 25, 25))
    dark_palette.setColor(QPalette.AlternateBase, QColor(53, 53, 53))
    dark_palette.setColor(QPalette.ToolTipBase, Qt.white)
    dark_palette.setColor(QPalette.ToolTipText, Qt.white)
    dark_palette.setColor(QPalette.Text, Qt.white)
    dark_palette.setColor(QPalette.Button, QColor(53, 53, 53))
    dark_palette.setColor(QPalette.ButtonText, Qt.white)
    dark_palette.setColor(QPalette.BrightText, Qt.red)
    dark_palette.setColor(QPalette.Link, QColor(42, 130, 218))
    dark_palette.setColor(QPalette.Highlight, QColor(42, 130, 218))
    dark_palette.setColor(QPalette.HighlightedText, Qt.black)
    
    app.setPalette(dark_palette)
    
    # Set stylesheet for better appearance
    app.setStyleSheet("""
        QToolTip { 
            color: #ffffff; 
            background-color: #2a82da; 
            border: 1px solid white; 
        }
        
        QTabWidget::pane {
            border: 1px solid #444;
            top: -1px;
        }
        
        QTabBar::tab {
            background: #3A3A3A;
            border: 1px solid #444;
            padding: 5px 10px;
            margin-right: 2px;
        }
        
        QTabBar::tab:selected {
            background: #636363;
        }
        
        QTabBar::tab:hover {
            background: #505050;
        }
        
        QPushButton {
            background-color: #3A3A3A;
            border: 1px solid #555;
            border-radius: 4px;
            padding: 5px 10px;
        }
        
        QPushButton:hover {
            background-color: #505050;
        }
        
        QPushButton:pressed {
            background-color: #2a82da;
        }
        
        QLineEdit, QComboBox {
            background-color: #2D2D2D;
            border: 1px solid #555;
            border-radius: 4px;
            padding: 3px 5px;
        }
        
        QProgressBar {
            border: 1px solid #555;
            border-radius: 4px;
            text-align: center;
        }
        
        QProgressBar::chunk {
            background-color: #2a82da;
        }
        
        QSlider::groove:horizontal {
            height: 8px;
            background: #2D2D2D;
            margin: 2px 0;
        }
        
        QSlider::handle:horizontal {
            background: #2a82da;
            border: 1px solid #2a82da;
            width: 18px;
            margin: -2px 0;
            border-radius: 9px;
        }
        
        QSlider::sub-page:horizontal {
            background: #2a82da;
        }
    """)
def get_translations(language):
    """Get translations for the specified language"""
    translations = {
        "en": {
            "Live TV": "Live TV",
            "Movies": "Movies",
            "Series": "Series",
            "Favorites": "Favorites",
            "Play": "Play",
            "Pause": "Pause",
            "Stop": "Stop",
            "Record": "Record",
            "Stop Recording": "Stop Recording",
            "Add to Favorites": "Add to Favorites",
            "Remove from Favorites": "Remove from Favorites",
            "Connect": "Connect",
            "Server URL": "Server URL",
            "Username": "Username",
            "Password": "Password",
            "Remember": "Remember",
            "Search channels...": "Search channels...",
            "Search movies...": "Search movies...",
            "Search series...": "Search series...",
            "Search favorites...": "Search favorites...",
            "Settings": "Settings",
            "Language": "Language",
            "Dark Mode": "Dark Mode",
            "Volume": "Volume",
            "Mute": "Mute",
            "Fullscreen": "Fullscreen",
            "Exit Fullscreen": "Exit Fullscreen",
            "Speed": "Speed",
            # Additional UI strings
            "Home": "Home",
            "Search": "Search",
            "Categories": "Categories",
            "Channels": "Channels",
            "ALL": "ALL",
            "Default": "Default",
            "Date": "Date",
            "Rating": "Rating",
            "Name": "Name",
            "Desc": "Desc",
            "Asc": "Asc",
            "Previous": "Previous",
            "Next": "Next",
            "All": "All",
            "Live": "Live",
            "Save": "Save",
            "Cancel": "Cancel",
            "Edit Account": "Edit Account",
            "Add Account": "Add Account",
            "Delete Account": "Delete Account",
            "Switch Account": "Switch Account",
            "No items to display.": "No items to display.",
            "No channels to display.": "No channels to display.",
            "No movies to display.": "No movies to display.",
            "Account Management": "Account Management",
            "Error": "Error",
            "Warning": "Warning",
            "Information": "Information",
            "Success": "Success",
            "Episodes": "Episodes",
            "Cast": "Cast",
            "Export Season URLs": "Export Season URLs",
            "WATCH TRAILER": "WATCH TRAILER",
            "PLAY": "PLAY",
            "No cast information available": "No cast information available",
            "No rating": "No rating",
            "Ready": "Ready",
            "File": "File",
            "Exit": "Exit",
            "Help": "Help",
            "About": "About",
            "English": "English",
            "Arabic": "Arabic",
            "Fast Backward": "Fast Backward",
            "Fast Forward": "Fast Forward",
            "Player": "Player",
            "Recording": "Recording",
            "Trailer": "Trailer",
            "Download": "Download",
            "Export": "Export",
            "Season": "Season",
            "Episode": "Episode",
            "Progress": "Progress",
            "Please wait...": "Please wait...",
            "My IPTV Account": "My IPTV Account",
            "Remember credentials": "Remember credentials",
            "Connection Error": "Connection Error",
            "Playback Error": "Playback Error",
            "Recording Error": "Recording Error",
            "Input Error": "Input Error",
            "Navigation Error": "Navigation Error",
            "Edit Current Account": "Edit Current Account",
            "Add New Account": "Add New Account",
            "Caching Data": "Caching Data",
            "Populating cache...": "Populating cache...",
            "Connection failed": "Connection failed",
            "Already in favorites": "Already in favorites",
            "Download Started": "Download Started",
            "Export Successful": "Export Successful",
            "Export Error": "Export Error",
            "Export Failed": "Export Failed",
            "Export Complete": "Export Complete",
            "Save Episode": "Save Episode",
            "Save Recording": "Save Recording",
            "Video Files": "Video Files",
            "Text Files": "Text Files",
            "M3U Playlist": "M3U Playlist",
            "All Files": "All Files",
            "Sahab Xtream IPTV": "Sahab Xtream IPTV",
            "Connecting to server...": "Connecting to server...",
            "Connected successfully. Populating cache...": "Connected successfully. Populating cache...",
            "Loading...": "Loading...",
            "Loading cast...": "Loading cast...",
            "Loading images...": "Loading images...",
            "Order by": "Order by:",
            "Speed": "Speed:",
            "Page": "Page",
            "of": "of",
            "Account Name": "Account Name:",
            "Director": "Director:",
            "‚Üê Back": "‚Üê Back",
            "‚ñ∂ PLAY": "‚ñ∂ PLAY",
            "üé¨ TRAILER": "üé¨ TRAILER",
            "Search Live, Movies, and Series...": "Search Live, Movies, and Series...",
            "Search series...": "Search series...",
            "Search movies...": "Search movies...",
            "e.g. My IPTV Account": "e.g. My IPTV Account",
            "http://example.com": "http://example.com",
            "Add/Edit Account": "Add/Edit Account",
            "Account Management": "Account Management",
            "‚Üê Back": "‚Üê Back",
            "Delete Account": "Delete Account",
            "Switch Account": "Switch Account",
            "üé¨ TRAILER": "üé¨ TRAILER",
            "Director: ": "Director: ",
            "This category doesn't contain any Series": "This category doesn't contain any Series",
            "Episodes": "Episodes",
            "Play": "Play",
            "Desc": "Desc",
            "Loading cast...": "Loading cast...",
            "No cast information available": "No cast information available",
            "Reload Data": "Reload Data",
            "Switch Account": "Switch Account",
            "No items to display.": "No items to display.",
            "No channels to display.": "No channels to display.",
            "No movies to display.": "No movies to display.",
            "This category doesn't contain any Series": "This category doesn't contain any Series",
            "Press ESC to return to normal view": "Press ESC to return to normal view",
            "Play Episode": "Play Episode",
            "Trailer playback not implemented.": "Trailer playback not implemented.",
            "Unable to get movie stream URL.": "Unable to get movie stream URL.",
            "Player window not available.": "Player window not available.",
            "Invalid series data provided.": "Invalid series data provided.",
            "Could not retrieve stream URL for the episode.": "Could not retrieve stream URL for the episode.",
            "Player window or episode data not available.": "Player window or episode data not available.",
            "Favorite functionality not available.": "Favorite functionality not available.",
            "Series data is incomplete for favorites.": "Series data is incomplete for favorites.",
            "Episode or series data not found for download.": "Episode or series data not found for download.",
            "Could not retrieve download URL for the episode.": "Could not retrieve download URL for the episode.",
            "Series data not available for season export.": "Series data not available for season export.",
            "No episodes found for Season": "No episodes found for Season",
            "to export.": "to export.",
            "Could not load favorites from favorites manager.": "Could not load favorites from favorites manager.",
            "No episode selected": "No episode selected",
            "No season selected": "No season selected",
            "Failed to get season information": "Failed to get season information",
            "Season URLs exported to": "Season URLs exported to:",
            "Failed to export season URLs": "Failed to export season URLs:",
            "Select an account to edit.": "Select an account to edit.",
            "Select an account to delete.": "Select an account to delete.",
            "Cannot delete the currently active account.": "Cannot delete the currently active account.",
            "Delete account": "Delete account",
            "Select an account to switch to.": "Select an account to switch to.",
            "Already using this account.": "Already using this account.",
            "Authentication failed. Please check credentials.": "Authentication failed. Please check credentials.",
            "Failed to load categories": "Failed to load categories:",
            "Failed to load movies": "Failed to load movies:",
            "Failed to load series": "Failed to load series:",
            "Favorites manager not available.": "Favorites manager not available.",
            "No movie selected": "No movie selected",
            "No movie is playing": "No movie is playing",
            "Failed to load channels": "Failed to load channels:",
            "No channel selected": "No channel selected",
            "Could not open the stream. The channel may be temporarily unavailable.": "Could not open the stream. The channel may be temporarily unavailable.",
            "Channel data is missing stream ID": "Channel data is missing stream ID",
            "Could not play the channel from search.": "Could not play the channel from search.",
            "No channel is playing": "No channel is playing",
            "Recording started successfully": "Recording started successfully",
            "Recording stopped successfully": "Recording stopped successfully",
            "Failed to load detailed series information": "Failed to load detailed series information:",
            "Error fetching detailed series metadata": "Error fetching detailed series metadata:",
            "Series ID is missing, cannot load details.": "Series ID is missing, cannot load details.",
            "Episode data not found.": "Episode data not found.",
            "No trailer URL available for this series.": "No trailer URL available for this series.",
            "No season selected to export.": "No season selected to export.",
            "Series tab is not available.": "Series tab is not available.",
            "Movies tab is not available.": "Movies tab is not available.",
            "Live TV tab is not available.": "Live TV tab is not available.",
            "Account name cannot be empty.": "Account name cannot be empty.",
            "An account with the name": "An account with the name",
            "already exists.": "already exists.",
            "Failed to connect": "Failed to connect:",
            "Categories": "Categories",
            "All": "All",
            "Default": "Default",
            "Date": "Date",
            "Rating": "Rating",
            "Name": "Name",
            "Channels": "Channels",
            "Previous": "Previous",
            "Next": "Next",
            "Page 1 of 1": "Page 1 of 1",
            "Back": "Back",
            "PLAY": "PLAY",
            "Add to favorites": "Add to favorites",
            "Remove from favorites": "Remove from favorites",
            "Cast": "Cast",
            "Export Season URLs": "Export Season URLs",
            "User": "User:",
            "Subscription expires": "Subscription expires:",
            "Password": "Password:",
            "Remember credentials": "Remember credentials",
            "Save": "Save",
            "Cancel": "Cancel",
            "Account Name": "Account Name:",
            "Server URL": "Server URL:",
            "Add Account": "Add Account",
            "Edit Account": "Edit Account",
            "e.g. My IPTV Account": "e.g. My IPTV Account",
            "http://example.com": "http://example.com",
            "Add/Edit Account": "Add/Edit Account",
            "Account Management": "Account Management",
            "‚Üê Back": "‚Üê Back",
            "Delete Account": "Delete Account",
            "Switch Account": "Switch Account",
            "üé¨ TRAILER": "üé¨ TRAILER",
            "Director: ": "Director: ",
            "This category doesn't contain any Series": "This category doesn't contain any Series",
            "Episodes": "Episodes",
            "Play": "Play",
            "Desc": "Desc",
            "Loading cast...": "Loading cast...",
            "No cast information available": "No cast information available"
        },
        "ar": {
            "Live TV": "ÿßŸÑÿ®ÿ´ ÿßŸÑŸÖÿ®ÿßÿ¥ÿ±",
            "Movies": "ÿßŸÑÿ£ŸÅŸÑÿßŸÖ",
            "Series": "ÿßŸÑŸÖÿ≥ŸÑÿ≥ŸÑÿßÿ™",
            "Favorites": "ÿßŸÑŸÖŸÅÿ∂ŸÑÿ©",
            "Play": "ÿ™ÿ¥ÿ∫ŸäŸÑ",
            "Pause": "ÿ•ŸäŸÇÿßŸÅ ŸÖÿ§ŸÇÿ™",
            "Stop": "ÿ•ŸäŸÇÿßŸÅ",
            "Record": "ÿ™ÿ≥ÿ¨ŸäŸÑ",
            "Stop Recording": "ÿ•ŸäŸÇÿßŸÅ ÿßŸÑÿ™ÿ≥ÿ¨ŸäŸÑ",
            "Add to Favorites": "ÿ•ÿ∂ÿßŸÅÿ© ÿ•ŸÑŸâ ÿßŸÑŸÖŸÅÿ∂ŸÑÿ©",
            "Remove from Favorites": "ÿ•ÿ≤ÿßŸÑÿ© ŸÖŸÜ ÿßŸÑŸÖŸÅÿ∂ŸÑÿ©",
            "Connect": "ÿßÿ™ÿµÿßŸÑ",
            "Server URL": "ÿπŸÜŸàÿßŸÜ ÿßŸÑÿÆÿßÿØŸÖ",
            "Username": "ÿßÿ≥ŸÖ ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ",
            "Password": "ŸÉŸÑŸÖÿ© ÿßŸÑŸÖÿ±Ÿàÿ±",
            "Remember": "ÿ™ÿ∞ŸÉÿ±",
            "Search channels...": "ÿßŸÑÿ®ÿ≠ÿ´ ŸÅŸä ÿßŸÑŸÇŸÜŸàÿßÿ™...",
            "Search movies...": "ÿßŸÑÿ®ÿ≠ÿ´ ŸÅŸä ÿßŸÑÿ£ŸÅŸÑÿßŸÖ...",
            "Search series...": "ÿßŸÑÿ®ÿ≠ÿ´ ŸÅŸä ÿßŸÑŸÖÿ≥ŸÑÿ≥ŸÑÿßÿ™...",
            "Search favorites...": "ÿßŸÑÿ®ÿ≠ÿ´ ŸÅŸä ÿßŸÑŸÖŸÅÿ∂ŸÑÿ©...",
            "Settings": "ÿßŸÑÿ•ÿπÿØÿßÿØÿßÿ™",
            "Language": "ÿßŸÑŸÑÿ∫ÿ©",
            "Dark Mode": "ÿßŸÑŸàÿ∂ÿπ ÿßŸÑÿØÿßŸÉŸÜ",
            "Volume": "ÿßŸÑÿµŸàÿ™",
            "Mute": "ŸÉÿ™ŸÖ",
            "Fullscreen": "ŸÖŸÑÿ° ÿßŸÑÿ¥ÿßÿ¥ÿ©",
            "Exit Fullscreen": "ÿßŸÑÿÆÿ±Ÿàÿ¨ ŸÖŸÜ ŸÖŸÑÿ° ÿßŸÑÿ¥ÿßÿ¥ÿ©",
            "Speed": "ÿßŸÑÿ≥ÿ±ÿπÿ©",
            # Additional UI strings in Arabic
            "Home": "ÿßŸÑÿ±ÿ¶Ÿäÿ≥Ÿäÿ©",
            "Search": "ÿßŸÑÿ®ÿ≠ÿ´",
            "Categories": "ÿßŸÑŸÅÿ¶ÿßÿ™",
            "Channels": "ÿßŸÑŸÇŸÜŸàÿßÿ™",
            "ALL": "ÿßŸÑŸÉŸÑ",
            "Default": "ÿßŸÅÿ™ÿ±ÿßÿ∂Ÿä",
            "Date": "ÿßŸÑÿ™ÿßÿ±ŸäÿÆ",
            "Rating": "ÿßŸÑÿ™ŸÇŸäŸäŸÖ",
            "Name": "ÿßŸÑÿßÿ≥ŸÖ",
            "Desc": "ÿ™ŸÜÿßÿ≤ŸÑŸä",
            "Asc": "ÿ™ÿµÿßÿπÿØŸä",
            "Previous": "ÿßŸÑÿ≥ÿßÿ®ŸÇ",
            "Next": "ÿßŸÑÿ™ÿßŸÑŸä",
            "All": "ÿßŸÑŸÉŸÑ",
            "Live": "ŸÖÿ®ÿßÿ¥ÿ±",
            "Save": "ÿ≠ŸÅÿ∏",
            "Cancel": "ÿ•ŸÑÿ∫ÿßÿ°",
            "Edit Account": "ÿ™ÿπÿØŸäŸÑ ÿßŸÑÿ≠ÿ≥ÿßÿ®",
            "Add Account": "ÿ•ÿ∂ÿßŸÅÿ© ÿ≠ÿ≥ÿßÿ®",
            "Delete Account": "ÿ≠ÿ∞ŸÅ ÿßŸÑÿ≠ÿ≥ÿßÿ®",
            "Switch Account": "ÿ™ÿ®ÿØŸäŸÑ ÿßŸÑÿ≠ÿ≥ÿßÿ®",
            "No items to display.": "ŸÑÿß ÿ™Ÿàÿ¨ÿØ ÿπŸÜÿßÿµÿ± ŸÑŸÑÿπÿ±ÿ∂.",
            "No channels to display.": "ŸÑÿß ÿ™Ÿàÿ¨ÿØ ŸÇŸÜŸàÿßÿ™ ŸÑŸÑÿπÿ±ÿ∂.",
            "No movies to display.": "ŸÑÿß ÿ™Ÿàÿ¨ÿØ ÿ£ŸÅŸÑÿßŸÖ ŸÑŸÑÿπÿ±ÿ∂.",
            "Account Management": "ÿ•ÿØÿßÿ±ÿ© ÿßŸÑÿ≠ÿ≥ÿßÿ®ÿßÿ™",
            "Error": "ÿÆÿ∑ÿ£",
            "Warning": "ÿ™ÿ≠ÿ∞Ÿäÿ±",
            "Information": "ŸÖÿπŸÑŸàŸÖÿßÿ™",
            "Success": "ŸÜÿ¨ÿ≠",
            "Episodes": "ÿßŸÑÿ≠ŸÑŸÇÿßÿ™",
            "Cast": "ÿ∑ÿßŸÇŸÖ ÿßŸÑÿ™ŸÖÿ´ŸäŸÑ",
            "Export Season URLs": "ÿ™ÿµÿØŸäÿ± ÿ±Ÿàÿßÿ®ÿ∑ ÿßŸÑŸÖŸàÿ≥ŸÖ",
            "WATCH TRAILER": "ŸÖÿ¥ÿßŸáÿØÿ© ÿßŸÑÿ•ÿπŸÑÿßŸÜ",
            "PLAY": "ÿ™ÿ¥ÿ∫ŸäŸÑ",
            "No cast information available": "ŸÑÿß ÿ™Ÿàÿ¨ÿØ ŸÖÿπŸÑŸàŸÖÿßÿ™ ÿπŸÜ ÿ∑ÿßŸÇŸÖ ÿßŸÑÿ™ŸÖÿ´ŸäŸÑ",
            "No rating": "ŸÑÿß ŸäŸàÿ¨ÿØ ÿ™ŸÇŸäŸäŸÖ",
            "Ready": "ÿ¨ÿßŸáÿ≤",
            "File": "ŸÖŸÑŸÅ",
            "Exit": "ÿÆÿ±Ÿàÿ¨",
            "Help": "ŸÖÿ≥ÿßÿπÿØÿ©",
            "About": "ÿ≠ŸàŸÑ",
            "English": "ÿßŸÑÿ•ŸÜÿ¨ŸÑŸäÿ≤Ÿäÿ©",
            "Arabic": "ÿßŸÑÿπÿ±ÿ®Ÿäÿ©",
            "Fast Backward": "ÿ™ÿ±ÿ¨Ÿäÿπ ÿ≥ÿ±Ÿäÿπ",
            "Fast Forward": "ÿ™ŸÇÿØŸäŸÖ ÿ≥ÿ±Ÿäÿπ",
            "Player": "ÿßŸÑŸÖÿ¥ÿ∫ŸÑ",
            "Recording": "ÿßŸÑÿ™ÿ≥ÿ¨ŸäŸÑ",
            "Trailer": "ÿßŸÑÿ•ÿπŸÑÿßŸÜ",
            "Download": "ÿ™ÿ≠ŸÖŸäŸÑ",
            "Export": "ÿ™ÿµÿØŸäÿ±",
            "Season": "ÿßŸÑŸÖŸàÿ≥ŸÖ",
            "Episode": "ÿßŸÑÿ≠ŸÑŸÇÿ©",
            "Progress": "ÿßŸÑÿ™ŸÇÿØŸÖ",
            "Please wait...": "Ÿäÿ±ÿ¨Ÿâ ÿßŸÑÿßŸÜÿ™ÿ∏ÿßÿ±...",
            "My IPTV Account": "ÿ≠ÿ≥ÿßÿ® IPTV ÿßŸÑÿÆÿßÿµ ÿ®Ÿä",
            "Remember credentials": "ÿ™ÿ∞ŸÉÿ± ÿ®ŸäÿßŸÜÿßÿ™ ÿßŸÑÿßÿπÿ™ŸÖÿßÿØ",
            "Connection Error": "ÿÆÿ∑ÿ£ ŸÅŸä ÿßŸÑÿßÿ™ÿµÿßŸÑ",
            "Playback Error": "ÿÆÿ∑ÿ£ ŸÅŸä ÿßŸÑÿ™ÿ¥ÿ∫ŸäŸÑ",
            "Recording Error": "ÿÆÿ∑ÿ£ ŸÅŸä ÿßŸÑÿ™ÿ≥ÿ¨ŸäŸÑ",
            "Input Error": "ÿÆÿ∑ÿ£ ŸÅŸä ÿßŸÑÿ•ÿØÿÆÿßŸÑ",
            "Navigation Error": "ÿÆÿ∑ÿ£ ŸÅŸä ÿßŸÑÿ™ŸÜŸÇŸÑ",
            "Edit Current Account": "ÿ™ÿπÿØŸäŸÑ ÿßŸÑÿ≠ÿ≥ÿßÿ® ÿßŸÑÿ≠ÿßŸÑŸä",
            "Add New Account": "ÿ•ÿ∂ÿßŸÅÿ© ÿ≠ÿ≥ÿßÿ® ÿ¨ÿØŸäÿØ",
            "Caching Data": "ÿ™ÿÆÿ≤ŸäŸÜ ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™ ŸÖÿ§ŸÇÿ™ÿßŸã",
            "Populating cache...": "ŸÖŸÑÿ° ÿßŸÑÿ™ÿÆÿ≤ŸäŸÜ ÿßŸÑŸÖÿ§ŸÇÿ™...",
            "Connection failed": "ŸÅÿ¥ŸÑ ÿßŸÑÿßÿ™ÿµÿßŸÑ",
            "Already in favorites": "ŸÖŸàÿ¨ŸàÿØ ÿ®ÿßŸÑŸÅÿπŸÑ ŸÅŸä ÿßŸÑŸÖŸÅÿ∂ŸÑÿ©",
            "Download Started": "ÿ®ÿØÿ£ ÿßŸÑÿ™ÿ≠ŸÖŸäŸÑ",
            "Export Successful": "ÿ™ŸÖ ÿßŸÑÿ™ÿµÿØŸäÿ± ÿ®ŸÜÿ¨ÿßÿ≠",
            "Export Error": "ÿÆÿ∑ÿ£ ŸÅŸä ÿßŸÑÿ™ÿµÿØŸäÿ±",
            "Export Failed": "ŸÅÿ¥ŸÑ ÿßŸÑÿ™ÿµÿØŸäÿ±",
            "Export Complete": "ÿßŸÉÿ™ŸÖŸÑ ÿßŸÑÿ™ÿµÿØŸäÿ±",
            "Save Episode": "ÿ≠ŸÅÿ∏ ÿßŸÑÿ≠ŸÑŸÇÿ©",
            "Save Recording": "ÿ≠ŸÅÿ∏ ÿßŸÑÿ™ÿ≥ÿ¨ŸäŸÑ",
            "Video Files": "ŸÖŸÑŸÅÿßÿ™ ÿßŸÑŸÅŸäÿØŸäŸà",
            "Text Files": "ÿßŸÑŸÖŸÑŸÅÿßÿ™ ÿßŸÑŸÜÿµŸäÿ©",
            "M3U Playlist": "ŸÇÿßÿ¶ŸÖÿ© ÿ™ÿ¥ÿ∫ŸäŸÑ M3U",
            "All Files": "ÿ¨ŸÖŸäÿπ ÿßŸÑŸÖŸÑŸÅÿßÿ™",
            "Sahab Xtream IPTV": "ÿ≥ÿ≠ÿßÿ® ÿ•ŸÉÿ≥ÿ™ÿ±ŸäŸÖ IPTV",
            "Connecting to server...": "ÿßŸÑÿßÿ™ÿµÿßŸÑ ÿ®ÿßŸÑÿÆÿßÿØŸÖ...",
            "Connected successfully. Populating cache...": "ÿ™ŸÖ ÿßŸÑÿßÿ™ÿµÿßŸÑ ÿ®ŸÜÿ¨ÿßÿ≠. ÿ¨ÿßÿ±Ÿä ÿ™ÿ≠ÿØŸäÿ´ ÿßŸÑÿ™ÿÆÿ≤ŸäŸÜ ÿßŸÑŸÖÿ§ŸÇÿ™...",
            "Loading...": "ÿ¨ÿßÿ±Ÿä ÿßŸÑÿ™ÿ≠ŸÖŸäŸÑ...",
            "Loading cast...": "ÿ¨ÿßÿ±Ÿä ÿ™ÿ≠ŸÖŸäŸÑ ÿ∑ÿßŸÇŸÖ ÿßŸÑÿ™ŸÖÿ´ŸäŸÑ...",
            "Loading images...": "ÿ¨ÿßÿ±Ÿä ÿ™ÿ≠ŸÖŸäŸÑ ÿßŸÑÿµŸàÿ±...",
            "Order by": "ÿ™ÿ±ÿ™Ÿäÿ® ÿ≠ÿ≥ÿ®:",
            "Speed": "ÿßŸÑÿ≥ÿ±ÿπÿ©:",
            "Page": "ÿµŸÅÿ≠ÿ©",
            "of": "ŸÖŸÜ",
            "Account Name": "ÿßÿ≥ŸÖ ÿßŸÑÿ≠ÿ≥ÿßÿ®:",
            "Director": "ÿßŸÑŸÖÿÆÿ±ÿ¨:",
            "‚Üê Back": "‚Üê ÿ±ÿ¨Ÿàÿπ",
            "‚ñ∂ PLAY": "‚ñ∂ ÿ™ÿ¥ÿ∫ŸäŸÑ",
            "üé¨ TRAILER": "üé¨ ÿ•ÿπŸÑÿßŸÜ",
            "Search Live, Movies, and Series...": "ÿßŸÑÿ®ÿ≠ÿ´ ŸÅŸä ÿßŸÑÿ®ÿ´ ÿßŸÑŸÖÿ®ÿßÿ¥ÿ± ŸàÿßŸÑÿ£ŸÅŸÑÿßŸÖ ŸàÿßŸÑŸÖÿ≥ŸÑÿ≥ŸÑÿßÿ™...",
            "Search series...": "ÿßŸÑÿ®ÿ≠ÿ´ ŸÅŸä ÿßŸÑŸÖÿ≥ŸÑÿ≥ŸÑÿßÿ™...",
            "Search movies...": "ÿßŸÑÿ®ÿ≠ÿ´ ŸÅŸä ÿßŸÑÿ£ŸÅŸÑÿßŸÖ...",
            "e.g. My IPTV Account": "ŸÖÿ´ÿßŸÑ: ÿ≠ÿ≥ÿßÿ® IPTV ÿßŸÑÿÆÿßÿµ ÿ®Ÿä",
            "http://example.com": "http://example.com",
            "Add/Edit Account": "ÿ•ÿ∂ÿßŸÅÿ©/ÿ™ÿπÿØŸäŸÑ ÿ≠ÿ≥ÿßÿ®",
            "Reload Data": "ÿ•ÿπÿßÿØÿ© ÿ™ÿ≠ŸÖŸäŸÑ ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™",
            "Switch Account": "ÿ™ÿ®ÿØŸäŸÑ ÿßŸÑÿ≠ÿ≥ÿßÿ®",
            "No items to display.": "ŸÑÿß ÿ™Ÿàÿ¨ÿØ ÿπŸÜÿßÿµÿ± ŸÑŸÑÿπÿ±ÿ∂.",
            "No channels to display.": "ŸÑÿß ÿ™Ÿàÿ¨ÿØ ŸÇŸÜŸàÿßÿ™ ŸÑŸÑÿπÿ±ÿ∂.",
            "No movies to display.": "ŸÑÿß ÿ™Ÿàÿ¨ÿØ ÿ£ŸÅŸÑÿßŸÖ ŸÑŸÑÿπÿ±ÿ∂.",
            "This category doesn't contain any Series": "Ÿáÿ∞Ÿá ÿßŸÑŸÅÿ¶ÿ© ŸÑÿß ÿ™ÿ≠ÿ™ŸàŸä ÿπŸÑŸâ ÿ£Ÿä ŸÖÿ≥ŸÑÿ≥ŸÑÿßÿ™",
            "Press ESC to return to normal view": "ÿßÿ∂ÿ∫ÿ∑ ESC ŸÑŸÑÿπŸàÿØÿ© ÿ•ŸÑŸâ ÿßŸÑÿπÿ±ÿ∂ ÿßŸÑÿπÿßÿØŸä",
            "Play Episode": "ÿ™ÿ¥ÿ∫ŸäŸÑ ÿßŸÑÿ≠ŸÑŸÇÿ©",
            "Trailer playback not implemented.": "ÿ™ÿ¥ÿ∫ŸäŸÑ ÿßŸÑÿ•ÿπŸÑÿßŸÜ ÿ∫Ÿäÿ± ŸÖÿ∑ÿ®ŸÇ.",
            "Unable to get movie stream URL.": "ÿ∫Ÿäÿ± ŸÇÿßÿØÿ± ÿπŸÑŸâ ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ÿ±ÿßÿ®ÿ∑ ÿ™ÿØŸÅŸÇ ÿßŸÑŸÅŸäŸÑŸÖ.",
            "Player window not available.": "ŸÜÿßŸÅÿ∞ÿ© ÿßŸÑŸÖÿ¥ÿ∫ŸÑ ÿ∫Ÿäÿ± ŸÖÿ™ÿßÿ≠ÿ©.",
            "Invalid series data provided.": "ÿ®ŸäÿßŸÜÿßÿ™ ÿßŸÑŸÖÿ≥ŸÑÿ≥ŸÑ ÿßŸÑŸÖŸÇÿØŸÖÿ© ÿ∫Ÿäÿ± ÿµÿ≠Ÿäÿ≠ÿ©.",
            "Could not retrieve stream URL for the episode.": "ŸÑÿß ŸäŸÖŸÉŸÜ ÿßÿ≥ÿ™ÿ±ÿØÿßÿØ ÿ±ÿßÿ®ÿ∑ ÿßŸÑÿ™ÿØŸÅŸÇ ŸÑŸÑÿ≠ŸÑŸÇÿ©.",
            "Player window or episode data not available.": "ŸÜÿßŸÅÿ∞ÿ© ÿßŸÑŸÖÿ¥ÿ∫ŸÑ ÿ£Ÿà ÿ®ŸäÿßŸÜÿßÿ™ ÿßŸÑÿ≠ŸÑŸÇÿ© ÿ∫Ÿäÿ± ŸÖÿ™ÿßÿ≠ÿ©.",
            "Favorite functionality not available.": "Ÿàÿ∏ŸäŸÅÿ© ÿßŸÑŸÖŸÅÿ∂ŸÑÿ© ÿ∫Ÿäÿ± ŸÖÿ™ÿßÿ≠ÿ©.",
            "Series data is incomplete for favorites.": "ÿ®ŸäÿßŸÜÿßÿ™ ÿßŸÑŸÖÿ≥ŸÑÿ≥ŸÑ ÿ∫Ÿäÿ± ŸÖŸÉÿ™ŸÖŸÑÿ© ŸÑŸÑŸÖŸÅÿ∂ŸÑÿ©.",
            "Episode or series data not found for download.": "ÿ®ŸäÿßŸÜÿßÿ™ ÿßŸÑÿ≠ŸÑŸÇÿ© ÿ£Ÿà ÿßŸÑŸÖÿ≥ŸÑÿ≥ŸÑ ÿ∫Ÿäÿ± ŸÖŸàÿ¨ŸàÿØÿ© ŸÑŸÑÿ™ÿ≠ŸÖŸäŸÑ.",
            "Could not retrieve download URL for the episode.": "ŸÑÿß ŸäŸÖŸÉŸÜ ÿßÿ≥ÿ™ÿ±ÿØÿßÿØ ÿ±ÿßÿ®ÿ∑ ÿßŸÑÿ™ÿ≠ŸÖŸäŸÑ ŸÑŸÑÿ≠ŸÑŸÇÿ©.",
            "Series data not available for season export.": "ÿ®ŸäÿßŸÜÿßÿ™ ÿßŸÑŸÖÿ≥ŸÑÿ≥ŸÑ ÿ∫Ÿäÿ± ŸÖÿ™ÿßÿ≠ÿ© ŸÑÿ™ÿµÿØŸäÿ± ÿßŸÑŸÖŸàÿ≥ŸÖ.",
            "No episodes found for Season": "ŸÑŸÖ Ÿäÿ™ŸÖ ÿßŸÑÿπÿ´Ÿàÿ± ÿπŸÑŸâ ÿ≠ŸÑŸÇÿßÿ™ ŸÑŸÑŸÖŸàÿ≥ŸÖ",
            "to export.": "ŸÑŸÑÿ™ÿµÿØŸäÿ±.",
            "Could not load favorites from favorites manager.": "ŸÑÿß ŸäŸÖŸÉŸÜ ÿ™ÿ≠ŸÖŸäŸÑ ÿßŸÑŸÖŸÅÿ∂ŸÑÿ© ŸÖŸÜ ŸÖÿØŸäÿ± ÿßŸÑŸÖŸÅÿ∂ŸÑÿ©.",
            "No episode selected": "ŸÑŸÖ Ÿäÿ™ŸÖ ÿ™ÿ≠ÿØŸäÿØ ÿ≠ŸÑŸÇÿ©",
            "No season selected": "ŸÑŸÖ Ÿäÿ™ŸÖ ÿ™ÿ≠ÿØŸäÿØ ŸÖŸàÿ≥ŸÖ",
            "Failed to get season information": "ŸÅÿ¥ŸÑ ŸÅŸä ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ŸÖÿπŸÑŸàŸÖÿßÿ™ ÿßŸÑŸÖŸàÿ≥ŸÖ",
            "Season URLs exported to": "ÿ™ŸÖ ÿ™ÿµÿØŸäÿ± ÿ±Ÿàÿßÿ®ÿ∑ ÿßŸÑŸÖŸàÿ≥ŸÖ ÿ•ŸÑŸâ:",
            "Failed to export season URLs": "ŸÅÿ¥ŸÑ ŸÅŸä ÿ™ÿµÿØŸäÿ± ÿ±Ÿàÿßÿ®ÿ∑ ÿßŸÑŸÖŸàÿ≥ŸÖ:",
            "Select an account to edit.": "ÿ≠ÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßŸã ŸÑŸÑÿ™ÿπÿØŸäŸÑ.",
            "Select an account to delete.": "ÿ≠ÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßŸã ŸÑŸÑÿ≠ÿ∞ŸÅ.",
            "Cannot delete the currently active account.": "ŸÑÿß ŸäŸÖŸÉŸÜ ÿ≠ÿ∞ŸÅ ÿßŸÑÿ≠ÿ≥ÿßÿ® ÿßŸÑŸÜÿ¥ÿ∑ ÿ≠ÿßŸÑŸäÿßŸã.",
            "Delete account": "ÿ≠ÿ∞ŸÅ ÿßŸÑÿ≠ÿ≥ÿßÿ®",
            "Select an account to switch to.": "ÿ≠ÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßŸã ŸÑŸÑÿ™ÿ®ÿØŸäŸÑ ÿ•ŸÑŸäŸá.",
            "Already using this account.": "ÿ™ÿ≥ÿ™ÿÆÿØŸÖ Ÿáÿ∞ÿß ÿßŸÑÿ≠ÿ≥ÿßÿ® ÿ®ÿßŸÑŸÅÿπŸÑ.",
            "Authentication failed. Please check credentials.": "ŸÅÿ¥ŸÑ ŸÅŸä ÿßŸÑŸÖÿµÿßÿØŸÇÿ©. Ÿäÿ±ÿ¨Ÿâ ÿßŸÑÿ™ÿ≠ŸÇŸÇ ŸÖŸÜ ÿ®ŸäÿßŸÜÿßÿ™ ÿßŸÑÿßÿπÿ™ŸÖÿßÿØ.",
            "Failed to load categories": "ŸÅÿ¥ŸÑ ŸÅŸä ÿ™ÿ≠ŸÖŸäŸÑ ÿßŸÑŸÅÿ¶ÿßÿ™:",
            "Failed to load movies": "ŸÅÿ¥ŸÑ ŸÅŸä ÿ™ÿ≠ŸÖŸäŸÑ ÿßŸÑÿ£ŸÅŸÑÿßŸÖ:",
            "Failed to load series": "ŸÅÿ¥ŸÑ ŸÅŸä ÿ™ÿ≠ŸÖŸäŸÑ ÿßŸÑŸÖÿ≥ŸÑÿ≥ŸÑÿßÿ™:",
            "Favorites manager not available.": "ŸÖÿØŸäÿ± ÿßŸÑŸÖŸÅÿ∂ŸÑÿ© ÿ∫Ÿäÿ± ŸÖÿ™ÿßÿ≠.",
            "No movie selected": "ŸÑŸÖ Ÿäÿ™ŸÖ ÿ™ÿ≠ÿØŸäÿØ ŸÅŸäŸÑŸÖ",
            "No movie is playing": "ŸÑÿß ŸäŸàÿ¨ÿØ ŸÅŸäŸÑŸÖ ŸÇŸäÿØ ÿßŸÑÿ™ÿ¥ÿ∫ŸäŸÑ",
            "Failed to load channels": "ŸÅÿ¥ŸÑ ŸÅŸä ÿ™ÿ≠ŸÖŸäŸÑ ÿßŸÑŸÇŸÜŸàÿßÿ™:",
            "No channel selected": "ŸÑŸÖ Ÿäÿ™ŸÖ ÿ™ÿ≠ÿØŸäÿØ ŸÇŸÜÿßÿ©",
            "Could not open the stream. The channel may be temporarily unavailable.": "ŸÑÿß ŸäŸÖŸÉŸÜ ŸÅÿ™ÿ≠ ÿßŸÑÿ™ÿØŸÅŸÇ. ŸÇÿØ ÿ™ŸÉŸàŸÜ ÿßŸÑŸÇŸÜÿßÿ© ÿ∫Ÿäÿ± ŸÖÿ™ÿßÿ≠ÿ© ŸÖÿ§ŸÇÿ™ÿßŸã.",
            "Channel data is missing stream ID": "ÿ®ŸäÿßŸÜÿßÿ™ ÿßŸÑŸÇŸÜÿßÿ© ÿ™ŸÅÿ™ŸÇÿ± ÿ•ŸÑŸâ ŸÖÿπÿ±ŸÅ ÿßŸÑÿ™ÿØŸÅŸÇ",
            "Could not play the channel from search.": "ŸÑÿß ŸäŸÖŸÉŸÜ ÿ™ÿ¥ÿ∫ŸäŸÑ ÿßŸÑŸÇŸÜÿßÿ© ŸÖŸÜ ÿßŸÑÿ®ÿ≠ÿ´.",
            "No channel is playing": "ŸÑÿß ÿ™Ÿàÿ¨ÿØ ŸÇŸÜÿßÿ© ŸÇŸäÿØ ÿßŸÑÿ™ÿ¥ÿ∫ŸäŸÑ",
            "Recording started successfully": "ÿ®ÿØÿ£ ÿßŸÑÿ™ÿ≥ÿ¨ŸäŸÑ ÿ®ŸÜÿ¨ÿßÿ≠",
            "Recording stopped successfully": "ÿ™ŸàŸÇŸÅ ÿßŸÑÿ™ÿ≥ÿ¨ŸäŸÑ ÿ®ŸÜÿ¨ÿßÿ≠",
            "Failed to load detailed series information": "ŸÅÿ¥ŸÑ ŸÅŸä ÿ™ÿ≠ŸÖŸäŸÑ ŸÖÿπŸÑŸàŸÖÿßÿ™ ÿßŸÑŸÖÿ≥ŸÑÿ≥ŸÑ ÿßŸÑÿ™ŸÅÿµŸäŸÑŸäÿ©:",
            "Error fetching detailed series metadata": "ÿÆÿ∑ÿ£ ŸÅŸä ÿ¨ŸÑÿ® ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™ ÿßŸÑŸàÿµŸÅŸäÿ© ÿßŸÑÿ™ŸÅÿµŸäŸÑŸäÿ© ŸÑŸÑŸÖÿ≥ŸÑÿ≥ŸÑ:",
            "Series ID is missing, cannot load details.": "ŸÖÿπÿ±ŸÅ ÿßŸÑŸÖÿ≥ŸÑÿ≥ŸÑ ŸÖŸÅŸÇŸàÿØÿå ŸÑÿß ŸäŸÖŸÉŸÜ ÿ™ÿ≠ŸÖŸäŸÑ ÿßŸÑÿ™ŸÅÿßÿµŸäŸÑ.",
            "Episode data not found.": "ÿ®ŸäÿßŸÜÿßÿ™ ÿßŸÑÿ≠ŸÑŸÇÿ© ÿ∫Ÿäÿ± ŸÖŸàÿ¨ŸàÿØÿ©.",
            "No trailer URL available for this series.": "ŸÑÿß ŸäŸàÿ¨ÿØ ÿ±ÿßÿ®ÿ∑ ÿ•ÿπŸÑÿßŸÜ ŸÖÿ™ÿßÿ≠ ŸÑŸáÿ∞ÿß ÿßŸÑŸÖÿ≥ŸÑÿ≥ŸÑ.",
            "No season selected to export.": "ŸÑŸÖ Ÿäÿ™ŸÖ ÿ™ÿ≠ÿØŸäÿØ ŸÖŸàÿ≥ŸÖ ŸÑŸÑÿ™ÿµÿØŸäÿ±.",
            "Series tab is not available.": "ÿ™ÿ®ŸàŸäÿ® ÿßŸÑŸÖÿ≥ŸÑÿ≥ŸÑÿßÿ™ ÿ∫Ÿäÿ± ŸÖÿ™ÿßÿ≠.",
            "Movies tab is not available.": "ÿ™ÿ®ŸàŸäÿ® ÿßŸÑÿ£ŸÅŸÑÿßŸÖ ÿ∫Ÿäÿ± ŸÖÿ™ÿßÿ≠.",
            "Live TV tab is not available.": "ÿ™ÿ®ŸàŸäÿ® ÿßŸÑÿ®ÿ´ ÿßŸÑŸÖÿ®ÿßÿ¥ÿ± ÿ∫Ÿäÿ± ŸÖÿ™ÿßÿ≠.",
            "Account name cannot be empty.": "ÿßÿ≥ŸÖ ÿßŸÑÿ≠ÿ≥ÿßÿ® ŸÑÿß ŸäŸÖŸÉŸÜ ÿ£ŸÜ ŸäŸÉŸàŸÜ ŸÅÿßÿ±ÿ∫ÿßŸã.",
            "An account with the name": "ÿ≠ÿ≥ÿßÿ® ÿ®ÿßŸÑÿßÿ≥ŸÖ",
            "already exists.": "ŸÖŸàÿ¨ŸàÿØ ÿ®ÿßŸÑŸÅÿπŸÑ.",
            "Failed to connect": "ŸÅÿ¥ŸÑ ŸÅŸä ÿßŸÑÿßÿ™ÿµÿßŸÑ:",
            "Categories": "ÿßŸÑŸÅÿ¶ÿßÿ™",
            "All": "ÿßŸÑŸÉŸÑ",
            "Default": "ÿßŸÅÿ™ÿ±ÿßÿ∂Ÿä",
            "Date": "ÿßŸÑÿ™ÿßÿ±ŸäÿÆ",
            "Rating": "ÿßŸÑÿ™ŸÇŸäŸäŸÖ",
            "Name": "ÿßŸÑÿßÿ≥ŸÖ",
            "Channels": "ÿßŸÑŸÇŸÜŸàÿßÿ™",
            "Previous": "ÿßŸÑÿ≥ÿßÿ®ŸÇ",
            "Next": "ÿßŸÑÿ™ÿßŸÑŸä",
            "Page 1 of 1": "ÿµŸÅÿ≠ÿ© 1 ŸÖŸÜ 1",
            "Back": "ÿ±ÿ¨Ÿàÿπ",
            "PLAY": "ÿ™ÿ¥ÿ∫ŸäŸÑ",
            "Add to favorites": "ÿ•ÿ∂ÿßŸÅÿ© ŸÑŸÑŸÖŸÅÿ∂ŸÑÿ©",
            "Remove from favorites": "ÿ•ÿ≤ÿßŸÑÿ© ŸÖŸÜ ÿßŸÑŸÖŸÅÿ∂ŸÑÿ©",
            "Cast": "ÿ∑ÿßŸÇŸÖ ÿßŸÑÿ™ŸÖÿ´ŸäŸÑ",
            "Export Season URLs": "ÿ™ÿµÿØŸäÿ± ÿ±Ÿàÿßÿ®ÿ∑ ÿßŸÑŸÖŸàÿ≥ŸÖ",
            "User": "ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ",
            "Subscription expires": "ÿ•ŸÜÿ™Ÿáÿßÿ° ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ",
            "Password": "ŸÉŸÑŸÖÿ© ÿßŸÑŸÖÿ±Ÿàÿ±:",
            "Remember credentials": "ÿ™ÿ∞ŸÉÿ± ÿ®ŸäÿßŸÜÿßÿ™ ÿßŸÑÿßÿπÿ™ŸÖÿßÿØ",
            "Save": "ÿ≠ŸÅÿ∏",
            "Cancel": "ÿ•ŸÑÿ∫ÿßÿ°",
            "Account Name": "ÿßÿ≥ŸÖ ÿßŸÑÿ≠ÿ≥ÿßÿ®:",
            "Server URL": "ÿ±ÿßÿ®ÿ∑ ÿßŸÑÿÆÿßÿØŸÖ:",
            "Add Account": "ÿ•ÿ∂ÿßŸÅÿ© ÿ≠ÿ≥ÿßÿ®",
            "Edit Account": "ÿ™ÿπÿØŸäŸÑ ÿßŸÑÿ≠ÿ≥ÿßÿ®",
            "e.g. My IPTV Account": "ŸÖÿ´ÿßŸÑ: ÿ≠ÿ≥ÿßÿ® IPTV ÿßŸÑÿÆÿßÿµ ÿ®Ÿä",
            "http://example.com": "http://example.com",
            "Add/Edit Account": "ÿ•ÿ∂ÿßŸÅÿ©/ÿ™ÿπÿØŸäŸÑ ÿßŸÑÿ≠ÿ≥ÿßÿ®",
            "Account Management": "ÿ•ÿØÿßÿ±ÿ© ÿßŸÑÿ≠ÿ≥ÿßÿ®ÿßÿ™",
            "‚Üê Back": "‚Üê ÿ±ÿ¨Ÿàÿπ",
            "Delete Account": "ÿ≠ÿ∞ŸÅ ÿßŸÑÿ≠ÿ≥ÿßÿ®",
            "Switch Account": "ÿ™ÿ®ÿØŸäŸÑ ÿßŸÑÿ≠ÿ≥ÿßÿ®",
            "üé¨ TRAILER": "üé¨ ÿßŸÑŸÖŸÇÿ∑ÿπ ÿßŸÑÿØÿπÿßÿ¶Ÿä",
            "Director: ": "ÿßŸÑŸÖÿÆÿ±ÿ¨: ",
            "This category doesn't contain any Series": "Ÿáÿ∞Ÿá ÿßŸÑŸÅÿ¶ÿ© ŸÑÿß ÿ™ÿ≠ÿ™ŸàŸä ÿπŸÑŸâ ÿ£Ÿä ŸÖÿ≥ŸÑÿ≥ŸÑÿßÿ™",
            "Episodes": "ÿßŸÑÿ≠ŸÑŸÇÿßÿ™",
            "Play": "ÿ™ÿ¥ÿ∫ŸäŸÑ",
            "Desc": "ÿ™ŸÜÿßÿ≤ŸÑŸä",
            "Loading cast...": "ÿ¨ÿßÿ±Ÿä ÿ™ÿ≠ŸÖŸäŸÑ ÿ∑ÿßŸÇŸÖ ÿßŸÑÿ™ŸÖÿ´ŸäŸÑ...",
            "No cast information available": "ŸÑÿß ÿ™Ÿàÿ¨ÿØ ŸÖÿπŸÑŸàŸÖÿßÿ™ ÿπŸÜ ÿ∑ÿßŸÇŸÖ ÿßŸÑÿ™ŸÖÿ´ŸäŸÑ"
        }
    }
    
    return translations.get(language, translations["en"])

def get_api_client_from_label(label, main_window):
    # Try to get api_client from main_window, fallback to traversing parents
    if main_window and hasattr(main_window, 'api_client'):
        return main_window.api_client
    # Fallback: traverse up the parent chain
    parent = label.parent()
    for _ in range(5):
        if parent is None:
            break
        if hasattr(parent, 'api_client'):
            return parent.api_client
        parent = parent.parent() if hasattr(parent, 'parent') else None
    return None

def load_image_async(image_url, label, default_pixmap, update_size=(100, 140), main_window=None, loading_counter=None, on_failure=None):
    ImageCache.ensure_cache_dir()
    cache_path = ImageCache.get_cache_path(image_url)
    def set_pixmap(pixmap):
        try:
            if not hasattr(label, 'setPixmap'):
                return

            label.setPixmap(pixmap.scaled(*update_size, Qt.KeepAspectRatio, Qt.SmoothTransformation))
        except RuntimeError:
            return
    def worker():
            # print(f"[DEBUG] Start loading image: {image_url}")
            if main_window and hasattr(main_window, 'loading_icon_controller'):
                main_window.loading_icon_controller.show_icon.emit()
            
            final_pix = QPixmap() 
            download_successful = False

            try:
                if not image_url:
                    print(f"[load_image_async] Invalid image_url (None or empty). Using default.")
                    # final_pix remains empty, will lead to default_pixmap and on_failure
                else:
                    # cache_path is from outer scope
                    temp_pix_worker = QPixmap() 
                    if os.path.exists(cache_path):
                        if temp_pix_worker.load(cache_path) and not temp_pix_worker.isNull():
                            final_pix = temp_pix_worker
                        else:
                            print(f"[load_image_async] Failed to load image from cache or cache invalid: {cache_path}")
                            # final_pix remains empty
                    
                    if final_pix.isNull(): # If not loaded from cache or cache was bad
                        image_data = None
                        if image_url.startswith('http://') or image_url.startswith('https://'):
                            #print(f"[load_image_async] Downloading image via requests: {image_url}")
                            
                            try:
                                response = requests.get(image_url, timeout=10) 
                                response.raise_for_status() 
                                image_data = response.content
                                download_successful = True
                                
                            except requests.HTTPError as e:
                                print(f"[load_image_async] HTTP Error downloading image: {e}")
                                image_data = None
                                        
                            except requests.RequestException as e:
                                print(f"[load_image_async] Request error: {e}")
                                image_data = None
                                    
                            except Exception as e:
                                print(f"[load_image_async] Unexpected error downloading with requests: {e}")
                                image_data = None 
                        else:
                            print(f"[load_image_async] Downloading image via api_client: {image_url}")
                            api_client = get_api_client_from_label(label, main_window)
                            try:
                                if api_client:
                                    image_data = api_client.get_image_data(image_url)
                                    if image_data:
                                        download_successful = True
                                else:
                                    print("[load_image_async] Could not find api_client for image download!")
                                    image_data = None 
                            except Exception as e: 
                                print(f"[load_image_async] Error downloading image via api_client: {e}")
                                image_data = None 
                        
                        if image_data:
                            if temp_pix_worker.loadFromData(image_data) and not temp_pix_worker.isNull():
                                final_pix = temp_pix_worker
                                try:
                                    saved = final_pix.save(cache_path) # Use cache_path from outer scope
                                    # print(f"[load_image_async] Image downloaded and cached: {cache_path}, save result: {saved}")
                                except Exception as e:
                                    print(f"[load_image_async] Error saving image to cache: {e}")
                            else:
                                print(f"[load_image_async] Failed to load image from data for: {image_url}")
                                # final_pix remains empty
                                download_successful = False
                        # else: image_data is None, final_pix remains empty
            
            except AttributeError as e: 
                print(f"[load_image_async] AttributeError in worker, likely due to invalid image_url '{image_url}': {e}")
                # final_pix remains empty
            except Exception as e: 
                print(f"[load_image_async] Unexpected error in image loading worker for '{image_url}': {e}")
                # final_pix remains empty

            pix_to_set = final_pix 
            if pix_to_set.isNull(): 
                pix_to_set = default_pixmap 
                if on_failure:
                    is_network_error = not download_successful and (image_url.startswith('http://') or image_url.startswith('https://'))
                    if hasattr(on_failure, '__self__') and isinstance(on_failure.__self__, QObject) and hasattr(on_failure, '__name__'):
                        QMetaObject.invokeMethod(on_failure.__self__, on_failure.__name__, Qt.QueuedConnection, Q_ARG(bool, is_network_error))
                    elif callable(on_failure):
                        # Handle lambda functions and other callables
                        try:
                            on_failure()
                        except Exception as e:
                            print(f"[load_image_async] Error calling on_failure callback: {e}")
                    else:
                        print(f"[load_image_async] on_failure callback '{on_failure}' is not a recognized QObject method or slot.")
            
            try:
                if hasattr(label, 'setPixmap'): 
                    scaled_pixmap = pix_to_set.scaled(*update_size, Qt.KeepAspectRatio, Qt.SmoothTransformation)


                    QMetaObject.invokeMethod(label, "setPixmap", Qt.QueuedConnection, Q_ARG(QPixmap, scaled_pixmap))
                else:
                    print(f"[load_image_async] Label {label} does not have setPixmap method.")
            except RuntimeError: 
                pass 

            if loading_counter is not None:
                loading_counter['count'] -= 1
                if loading_counter['count'] <= 0 and main_window and hasattr(main_window, 'loading_icon_controller'):
                    main_window.loading_icon_controller.hide_icon.emit()
            else: 
                if main_window and hasattr(main_window, 'loading_icon_controller'):
                    main_window.loading_icon_controller.hide_icon.emit()
            #print(f"[DEBUG] Finished loading image: {image_url}")
    # Set placeholder immediately
    set_pixmap(default_pixmap)
    if loading_counter is not None:
        loading_counter['count'] += 1
    threading.Thread(target=worker, daemon=True).start()
